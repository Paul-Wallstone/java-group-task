Задание 1: Полиморфизм
Создайте иерархию классов для разных типов работников в компании. Каждый работник должен иметь метод work(), который выводит на экран описание его работы.

Требования:
Создайте interface Employee с методом work().
Создайте три класса-наследника: Developer, Designer и Manager, каждый из которых должен переопределить метод work().
Создайте массив объектов Employee и добавьте в него объекты всех трех типов.
В цикле вызовите метод work() для каждого элемента массива и убедитесь, что вызывается правильный метод для каждого типа работника.

Задание 2: Наследование
Создайте иерархию классов для транспортных средств. Каждый класс должен иметь метод move(), который выводит способ передвижения.

Требования:
Создайте базовый класс (можно abstract) Vehicle с методом move().
Создайте два класса-наследника: Car и Bicycle, каждый из которых должен переопределить метод move().
Создайте дополнительный класс ElectricCar, который наследует Car и добавляет поле для уровня заряда батареи.
В каждом классе создайте соответствующий конструктор и методы, необходимые для работы с полями класса.

Задание 3: Инкапсуляция
Создайте класс для управления банковским счетом.
В классе должны быть методы для депозита, снятия средств и проверки баланса. Все поля класса должны быть приватными.

Требования:
Создайте класс BankAccount с приватными полями balance и accountNumber.
Реализуйте публичные методы deposit(double amount), withdraw(double amount) и getBalance().
В методе withdraw(double amount) убедитесь, что снимаемая сумма не превышает текущий баланс.
Добавьте валидацию для методов депозита и снятия средств (сумма должна быть положительной).