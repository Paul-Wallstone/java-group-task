Задание 1: Создание и использование собственного исключения
Цель: Создать собственное исключение и использовать его в приложении.
Описание задания:

Создайте собственное исключение:

Создайте класс InvalidUserInputException, который расширяет Exception.
 Это исключение будет использоваться для обработки случаев, когда пользователь вводит недопустимые данные.
Разработайте класс с методами, которые могут выбросить ваше исключение:

Создайте класс UserInputProcessor с методом processInput(String input), который проверяет, является ли входное значение пустым.
Если значение пустое, метод должен выбрасывать InvalidUserInputException с соответствующим сообщением.
Обработайте исключение:

Напишите класс Main, в котором создайте объект UserInputProcessor и вызовите метод processInput.
Обработайте исключение в блоке try-catch, выведите сообщение об ошибке.


Задание 2: Вложенные блоки try-catch с использованием нескольких исключений
Цель: Научиться обрабатывать несколько различных типов исключений в одном методе с использованием вложенных блоков try-catch.

Описание задания:

Создайте два собственных исключения:

Создайте исключение FileNotFoundCustomException, которое будет расширять Exception.
Создайте исключение DatabaseConnectionException, которое также расширяет Exception.
Создайте класс FileProcessor с методами, которые могут выбрасывать ваши исключения:

Создайте метод readFile(String filePath) в классе FileProcessor,
который имитирует чтение файла и выбрасывает FileNotFoundCustomException, если путь к файлу некорректен.
Создайте метод connectToDatabase(String databaseUrl) в классе FileProcessor,
который имитирует подключение к базе данных и выбрасывает DatabaseConnectionException, если URL базы данных некорректен.
Обработайте исключения в методе main:

Напишите метод main в классе Main, в котором создайте объект FileProcessor и вызовите оба метода.
Обработайте оба типа исключений в одном блоке try-catch, используя несколько блоков catch для обработки различных исключений.