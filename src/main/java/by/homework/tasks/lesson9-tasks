Задание1:
Создайте класс Person, который реализует интерфейс Cloneable.
Класс должен содержать следующие поля: name (имя) и age (возраст).
Реализуйте метод clone() для клонирования объекта.
Напишите тесты, чтобы продемонстрировать, что клонирование работает правильно.

Задание2:
Создайте классы Address и Employee, где Employee содержит поле Address.
Реализуйте глубокое клонирование для Employee, так чтобы при клонировании создавался новый объект Address.
Напишите тесты, чтобы продемонстрировать, что клонирование работает правильно.

Задание3:
Создайте паттерн проектирования Prototype для клонирования объектов из задания2.
Реализуйте интерфейс Prototype, создайте конкретные классы Address и Employee с методом clone.
public interface Prototype<T> {
    T clone();
}
Prototype:https://refactoring.guru/ru/design-patterns/prototype
Напишите тесты, чтобы продемонстрировать, что клонирование работает правильно.